{"version":3,"sources":["pages/game/components/ScoreDashboard/scoreDashboard.module.css","pages/game/game.module.css","pages/game/components/ActiveQuestion/AnswersList/AnswerItem/answerItem.module.css","components/Layout/layout.module.css","components/Button/button.module.css","pages/game/components/ActiveQuestion/ActiveQuestion.module.css","pages/game/components/ActiveQuestion/AnswersList/answersList.module.css","components/Layout/Layout.tsx","components/Button/Button.tsx","pages/gameStatus/gameStatus.tsx","data/questions.js","images/button.tsx","pages/game/components/ActiveQuestion/AnswersList/AnswerItem/AnswerItem.tsx","pages/game/components/ActiveQuestion/AnswersList/AnswersList.tsx","pages/game/components/ActiveQuestion/ActiveQuestion.tsx","data/moneyAccount.js","pages/game/components/ScoreDashboard/components/ButtonScore/ButtonScore.js","pages/game/components/ScoreDashboard/StyledMobMenu.styled.tsx","components/Burger/Burger.styled.js","components/Burger/Burger.tsx","components/MobileMenu/MobileMenu.tsx","pages/game/components/ScoreDashboard/ScoreDashboard.tsx","pages/game/game.tsx","hooks/useTotalScore.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/gameStatus/gameStatus.module.css"],"names":["module","exports","Layout","children","className","s","layout","Button","button","GameStatus","isMain","useLocation","pathname","totalScore","sessionStorage","getItem","mainContainer","gameOverContainer","handImageBlock","infoBlock","contentWrapper","startButton","to","ButtonImg","borderColor","background","width","height","viewBox","fill","xmlns","d","stroke","AnswerItem","answer","onAnswerClick","answerStyle","useState","undefined","hoverColor","setHoverColor","container","onClick","id","onMouseEnter","onMouseLeave","onTouchStart","setTimeout","text","buttonSvg","AnswersList","answers","map","index","ActiveQuestion","data","activeQuestion","question","ButtonScore","StyledMobWrapper","styled","div","open","StyledBurger","Burger","setOpen","props","isExpanded","style","outline","MobileMenu","onOpenHandler","ScoreDashboard","score","scoreDashboard","moneyAccount","money","isOpen","item","color","itemValue","textAlign","Game","questions","history","useHistory","setTotalScore","setIndex","useEffect","total","filter","_","i","setItem","useTotalScore","isFinished","length","state","setState","push","isGameOver","gamePlace","answerId","rightAnswerId","timeout","window","maxScore","clearTimeout","scorePlace","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e6828eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"scoreDashboard_container__2HrdC\",\"item\":\"scoreDashboard_item__1PuHd\",\"itemValue\":\"scoreDashboard_itemValue__1WbVY\",\"button\":\"scoreDashboard_button__2hZdK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"game_container__WZRIz\",\"gamePlace\":\"game_gamePlace__1tWyA\",\"scorePlace\":\"game_scorePlace__2y_QV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"answerItem_container__SSdSJ\",\"buttonSvg\":\"answerItem_buttonSvg__10HuA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"layout_layout__pI1DP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__1kMbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeQuestion\":\"ActiveQuestion_activeQuestion__16I3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"answersList_container__ppFgQ\"};","import React, {FC} from \"react\";\r\nimport s from './layout.module.css'\r\n\r\nconst Layout: FC = ({children}) => (\r\n        <main className={s.layout}>\r\n            {children}\r\n        </main>\r\n    )\r\n\r\nexport default Layout","import React from \"react\";\r\nimport s from './button.module.css'\r\n\r\nconst Button: React.FC = ({children}) => {\r\n    return (\r\n        <button\r\n            className={s.button}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React, {FC} from \"react\";\r\nimport s from './gameStatus.module.css'\r\nimport {NavLink, useLocation} from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\n\r\nconst GameStatus: FC = () => {\r\n\r\n    const location = useLocation()\r\n    let isMain: boolean = location.pathname === '/'\r\n    let totalScore: false | string | null = !isMain && sessionStorage.getItem('totalScore')\r\n\r\n    return (\r\n        <div className={isMain ? s.mainContainer : s.gameOverContainer}>\r\n            <div className={s.handImageBlock}/>\r\n            <div className={s.infoBlock}>\r\n                <div className={s.contentWrapper}>\r\n                    {isMain\r\n                        ? <p>Who wants to be a millionaire?</p>\r\n                        : <>\r\n                            <p className={s.totalScore}>Total score:</p>\r\n                            <p>{totalScore} earned</p>\r\n                        </>\r\n                    }\r\n                    <NavLink className={s.startButton} to={'/game'}>\r\n                        <Button>{isMain ? \"Start\" : \"Try again\"}</Button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameStatus","export default\r\n{\r\n  \"questions\": [\r\n    {\r\n      \"question\": \"Who created the javascript language?\",\r\n      \"id\": 1,\r\n      \"rightAnswerId\": 1,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"Brendan Eich\",\r\n          \"id\": 1,\r\n        },\r\n        {\r\n          \"text\": \"Rasmus Lerdorf\",\r\n          \"id\": 2,\r\n        },\r\n        {\r\n          \"text\": \"James Gosling\",\r\n          \"id\": 3,\r\n        },\r\n        {\r\n          \"text\": \"Bjarne Stroustrup\",\r\n          \"id\": 4,\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"When is Ukraine's Independence Day celebrated?\",\r\n      \"id\": 2,\r\n      \"rightAnswerId\": 4,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"8 March\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"3 december\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"11 September\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"24 August\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"In which hook do you need to download data from the server?\",\r\n      \"id\": 3,\r\n      \"rightAnswerId\": 4,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"UseContext\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"UseMemo\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"UseState\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"UseEffect\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"How many legs does a spider have?\",\r\n      \"id\": 4,\r\n      \"rightAnswerId\": 4,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"4\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"2\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"6\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"8\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"The building blocks of any React application?\",\r\n      \"id\": 5,\r\n      \"rightAnswerId\": 2,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"Bricks\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"Components\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"Pipes\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"Еhe lists\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"Components that are not re-rendered when their state and props are updated with the same values?\",\r\n      \"id\": 6,\r\n      \"rightAnswerId\": 4,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"Small components\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"Hybrid components\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"Dirty components\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"Pure Components\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"What is the largest ocean on Earth in terms of area and depth?\",\r\n      \"id\": 7,\r\n      \"rightAnswerId\": 2,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"Indian Ocean\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"Pacific Ocean\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"Atlantic Ocean\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"Arctic Ocean\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"The world's largest investor as well as the most famous?\",\r\n      \"id\": 8,\r\n      \"rightAnswerId\": 4,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"Jeff Bezos\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"Elon Musk\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"Bernard Arnault\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"Warren Buffett\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"Which language is NOT Indo-European?\",\r\n      \"id\": 9,\r\n      \"rightAnswerId\": 1,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"Hungarian\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"Russian\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"Greek\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"Latvian\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"The Mexican Beer \\\"Corona\\\" is what type of beer?\",\r\n      \"id\": 10,\r\n      \"rightAnswerId\": 3,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"India Pale Ale\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"Pilfsner\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"Pale Lager\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"Baltic Porter\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"Which language is NOT Indo-European?\",\r\n      \"id\": 11,\r\n      \"rightAnswerId\": 1,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"Hungarian\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"Russian\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"Greek\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"Latvian\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"question\": \"What is the name of the author of this application?\",\r\n      \"id\": 12,\r\n      \"rightAnswerId\": 3,\r\n      \"answers\": [\r\n        {\r\n          \"text\": \"Vyacheslav\",\r\n          \"id\": 1\r\n        },\r\n        {\r\n          \"text\": \"Yaroslav\",\r\n          \"id\": 2\r\n        },\r\n        {\r\n          \"text\": \"Rostislav\",\r\n          \"id\": 3\r\n        },\r\n        {\r\n          \"text\": \"Kostyantyn\",\r\n          \"id\": 4\r\n        }\r\n      ]\r\n    },\r\n  ]\r\n}","import React, {FC} from \"react\";\r\n\r\ninterface BIProps {\r\n    borderColor: string\r\n    background: string\r\n}\r\n\r\nconst ButtonImg: FC<BIProps> = ({borderColor, background}) => (\r\n    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 405 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M388 36L405 36\" stroke={borderColor}/>\r\n        <path d=\"M0 36L17 36\" stroke={borderColor}/>\r\n        <path\r\n            d=\"M38.7172 5.28344C40.8781 2.28016 44.3521 0.5 48.052 0.5H356.948C360.648 0.5 364.122 2.28016 366.283 5.28344L388.384 36L366.283 66.7166C364.122 69.7198 360.648 71.5 356.948 71.5H48.052C44.3521 71.5 40.8781 69.7198 38.7172 66.7166L16.616 36L38.7172 5.28344Z\"\r\n            fill={background} stroke={borderColor}/>\r\n    </svg>\r\n)\r\n\r\nexport default ButtonImg","import React, {FC, useState} from \"react\";\r\nimport s from './answerItem.module.css'\r\nimport ButtonImg from \"../../../../../../images/button\";\r\n\r\ninterface AIProps {\r\n    answer: {\r\n        text: string\r\n        id: number\r\n    }\r\n    onAnswerClick: (answerId: number) => void\r\n    answerStyle: null | {\r\n        borderColor: string\r\n        background: string\r\n    }\r\n}\r\n\r\nconst AnswerItem: FC<AIProps> = ({\r\n                                     answer,\r\n                                     onAnswerClick,\r\n                                     answerStyle\r\n                                 }) => {\r\n\r\n    const [hoverColor, setHoverColor] = useState<string | undefined>(undefined)\r\n    const option = ['A', 'B', 'C', 'D']\r\n\r\n    const touchHandler = () => {\r\n        setHoverColor('#FF8B37')\r\n        setTimeout( () =>setHoverColor(undefined), 500)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={s.container}\r\n            onClick={() => onAnswerClick(answer.id)}\r\n            onMouseEnter={() => setHoverColor('#FF8B37')}\r\n            onMouseLeave={() => setHoverColor(undefined)}\r\n            onTouchStart={touchHandler}\r\n        >\r\n            <p>\r\n                <span>{option[answer.id - 1]}</span>&nbsp;&nbsp;&nbsp; {answer.text}\r\n            </p>\r\n            <div className={s.buttonSvg}>\r\n                <ButtonImg\r\n                    borderColor={answerStyle?.borderColor || hoverColor || '#D0D0D8'}\r\n                    background={answerStyle?.background || '#FFFFFF'}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React, {FC} from \"react\";\r\nimport s from \"./answersList.module.css\"\r\nimport AnswerItem from \"./AnswerItem\";\r\nimport {Answers, AStyle} from \"../../../../../types\";\r\n\r\ninterface ALProps {\r\n    answers: Answers[];\r\n    onAnswerClick: (answerId: number) => void\r\n    answerStyle: null | AStyle\r\n}\r\n\r\nconst AnswersList: FC<ALProps> = ({\r\n                                      answers,\r\n                                      onAnswerClick,\r\n                                      answerStyle\r\n                                  }) => (\r\n    <div className={s.container}>\r\n        {answers.map((answer, index) => (\r\n            <AnswerItem\r\n                key={index}\r\n                answer={answer}\r\n                onAnswerClick={onAnswerClick}\r\n                answerStyle={answerStyle ? answerStyle[answer.id] : null}\r\n            />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default AnswersList","import React, {FC} from \"react\";\r\nimport s from './ActiveQuestion.module.css'\r\nimport AnswersList from \"./AnswersList\";\r\nimport {AStyle, QuestionData} from \"../../../../types\";\r\n\r\ninterface AQProps {\r\n    data: QuestionData\r\n    onAnswerClick: (answerId: number) => void\r\n    answerStyle: null | AStyle\r\n}\r\n\r\nconst ActiveQuestion: FC<AQProps> = ({\r\n                                         data,\r\n                                         onAnswerClick,\r\n                                         answerStyle\r\n                                     }) => (\r\n    <div className={s.activeQuestion}>\r\n        <p >{data.question}</p>\r\n        <AnswersList\r\n            answers={data.answers}\r\n            onAnswerClick={onAnswerClick}\r\n            answerStyle={answerStyle}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuestion","export default {\r\n    \"money\": [\r\n         \"$1,000,000\",\r\n         \"$500,000\",\r\n         \"$250,000\",\r\n         \"$125,000\",\r\n         \"$64,000\",\r\n         \"$32,000\",\r\n         \"$16,000\",\r\n         \"$8,000\",\r\n         \"$4,000\",\r\n         \"$2,000\",\r\n         \"$1,000\",\r\n         \"$500\"\r\n    ]\r\n}","import React from \"react\";\r\n\r\nconst ButtonScore = () => {\r\n    return (\r\n        <svg width=\"376\" height=\"40\" viewBox=\"0 0 376 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M69 20H0\" stroke=\"#D0D0D8\"/>\r\n            <path d=\"M376 20H307\" stroke=\"#D0D0D8\"/>\r\n            <path d=\"M81.4526 4.63788C83.6376 2.01596 86.8742 0.5 90.2872 0.5H285.713C289.126 0.5 292.362 2.01597 294.547 4.63788L307.349 20L294.547 35.3621C292.362 37.984 289.126 39.5 285.713 39.5H90.2872C86.8742 39.5 83.6376 37.984 81.4526 35.3621L68.6509 20L81.4526 4.63788Z\" fill=\"white\" stroke=\"#D0D0D8\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default ButtonScore","import styled from 'styled-components';\r\n\r\ninterface Styled {\r\n    open: boolean\r\n}\r\n\r\nexport const StyledMobWrapper = styled.div<Styled>`\r\n  @media (max-width: 1200px) {\r\n    transform: ${({open}) => open ? 'translateX(0)' : 'translateX(-100%)'};\r\n    background: white;\r\n    transition-timing-function: ease;\r\n    transition-duration: .4s;\r\n    z-index: 19;\r\n    &.container {\r\n        visibility: ${({open}) => open ? 'hidden' : 'visible'}; \r\n        transition-timing-function: ease;\r\n        transition-duration: .4s;\r\n      }\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledBurger = styled.button`\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 20;\r\n  \r\n  @media (min-width: 600px) {\r\n    display: none;\r\n}\r\n  span {\r\n    color: black!important;\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background: #1C1C21!important;\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n    :first-child {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => open ? '0' : '1'};\r\n      transform: ${({ open }) => open ? 'translateX(-20px)' : 'translateX(0)'};\r\n    }\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`;","import React, {FC} from 'react';\r\nimport { StyledBurger } from './Burger.styled';\r\n\r\ninterface BurgerProp {\r\n    open: boolean\r\n    setOpen: any\r\n}\r\n\r\nconst Burger: FC<BurgerProp> = ({ open, setOpen, ...props }) => {\r\n    const isExpanded = open;\r\n\r\n    return (\r\n\r\n        <StyledBurger\r\n            aria-label=\"Toggle menu\"\r\n            aria-expanded={isExpanded}\r\n            // @ts-ignore\r\n            open={open}\r\n            onClick={() => setOpen(!open)} {...props}\r\n            style={{outline: 'none'}}\r\n        >\r\n            <span />\r\n            <span />\r\n            <span />\r\n        </StyledBurger>\r\n    )\r\n}\r\n\r\nexport default Burger;","import React, {FC, useState} from 'react';\r\nimport Burger from '../Burger';\r\n\r\ninterface MMProps {\r\n    onOpenHandler: (isOpen: boolean) => void\r\n}\r\n\r\nconst MobileMenu: FC<MMProps> = ({onOpenHandler}) => {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const menuId = \"main-menu\";\r\n\r\n    return (\r\n        <div onClick={() => onOpenHandler(open)}>\r\n            <Burger open={open} setOpen={setOpen} aria-controls={menuId}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MobileMenu;","import React, {FC, useState} from \"react\";\r\nimport moneyAccount from \"../../../../data/moneyAccount\";\r\nimport s from './scoreDashboard.module.css'\r\nimport ButtonScore from \"./components/ButtonScore\";\r\nimport {StyledMobWrapper} from \"./StyledMobMenu.styled\";\r\nimport MobileMenu from \"../../../../components/MobileMenu/MobileMenu\";\r\n\r\ninterface SDProps {\r\n    score: number\r\n}\r\n\r\nconst ScoreDashboard: FC<SDProps> = ({score, ...props}) => {\r\n\r\n    let [open, setOpen] = useState(true)\r\n    const onOpenHandler = (isOpen: boolean) => setOpen(isOpen)\r\n\r\n    const {money: scoreDashboard} = moneyAccount\r\n\r\n    return (\r\n        <>\r\n            <MobileMenu onOpenHandler={onOpenHandler}/>\r\n            <StyledMobWrapper open={open}  {...props}>\r\n                <div className={s.container}>\r\n                    {scoreDashboard.map((item, index) => {\r\n                            let color = \"#D0D0D8\"\r\n                            if (score === index) {\r\n                                color = \"#FF8B37\"\r\n                            }\r\n                            if (score > index) {\r\n                                color = 'black'\r\n                            }\r\n\r\n                            return <div className={s.item} key={item}>\r\n                                <div\r\n                                    className={s.itemValue}\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        color: color\r\n                                    }}\r\n                                >\r\n                                    {item}\r\n                                </div>\r\n                                <div className={s.button}>\r\n                                    <ButtonScore/>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    )}\r\n                </div>\r\n            </StyledMobWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScoreDashboard","import React, {FC, useEffect, useState} from \"react\";\r\nimport s from './game.module.css'\r\nimport questions from '../../data'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport ActiveQuestion from \"./components/ActiveQuestion\";\r\nimport ScoreDashboard from \"./components/ScoreDashboard\";\r\nimport useTotalScore from \"../../hooks/useTotalScore\";\r\nimport {GameState} from \"../../types\";\r\nimport moneyAccount from \"../../data/moneyAccount\";\r\n\r\nconst Game: FC = () => {\r\n    const {questions: data} = questions\r\n\r\n    const history = useHistory()\r\n    const [setIndex] = useTotalScore()\r\n    const [state, setState] = useState<GameState>({\r\n        isFinished: false,\r\n        activeQuestion: 0,\r\n        score: data.length - 1,\r\n        answerStyle: null //[id]: {borderColor: '#D0D0D8', background: '#FFFFFF'}\r\n    })\r\n\r\n    useEffect(() => {\r\n        state.isFinished && history.push('/game-over')\r\n    })\r\n\r\n    const onAnswerClickHandler = (answerId: number) => {\r\n        const question = data[state.activeQuestion]\r\n        // @ts-ignore\r\n        setIndex(state.score)\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            setState({\r\n                ...state,\r\n                answerStyle: {\r\n                    [answerId]: {borderColor: '#47D867', background: '#E6FAEA'}\r\n                }\r\n            })\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (isGameOver()) {\r\n                    const maxScore = moneyAccount.money[0]\r\n                    sessionStorage.setItem('totalScore', maxScore)\r\n                    history.push('/game-over')\r\n                } else {\r\n                    setState({\r\n                        ...state,\r\n                        activeQuestion: state.activeQuestion + 1,\r\n                        score: state.score - 1,\r\n                    })\r\n\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 500)\r\n\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                answerStyle: {\r\n                    [answerId]: {borderColor: '#EC6259', background: '#FDEEED'}\r\n                }\r\n            })\r\n            const timeout = window.setTimeout(() => {\r\n                history.push('/game-over')\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    const isGameOver = () => state.activeQuestion + 1 === data.length\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.gamePlace}>\r\n                <ActiveQuestion\r\n                    data={data[state.activeQuestion]}\r\n                    onAnswerClick={onAnswerClickHandler}\r\n                    answerStyle={state.answerStyle}\r\n                />\r\n            </div>\r\n            <div className={s.scorePlace}>\r\n                <ScoreDashboard score={state.score}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game","import {useEffect, useState} from \"react\";\r\nimport moneyAccount from \"../data/moneyAccount\";\r\n\r\nexport default () => {\r\n\r\n    const [totalScore, setTotalScore] = useState<string>('$0')\r\n    const [index, setIndex] = useState<number>(11)\r\n\r\n    useEffect(() => {\r\n        let total = moneyAccount.money.filter((_, i) => i === index)[0]\r\n        setTotalScore(total)\r\n        sessionStorage.setItem('totalScore', totalScore)\r\n    }, [index])\r\n\r\n    return [setIndex, totalScore]\r\n}","import React from 'react';\r\nimport Layout from \"./components/Layout\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport GameStatus from \"./pages/gameStatus\";\r\nimport Game from \"./pages/game\";\r\n\r\nconst App = () => (\r\n    <Layout>\r\n        <Switch>\r\n            <Route path={'/game-over'} component={GameStatus}/>\r\n            <Route path={'/game'} component={Game}/>\r\n            <Route path={'/'} component={GameStatus}/>\r\n            <Redirect to={'/'}/>\r\n        </Switch>\r\n    </Layout>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter as Router} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <App/>\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"gameStatus_mainContainer__311xK\",\"gameOverContainer\":\"gameStatus_gameOverContainer__2cUbt\",\"handImageBlock\":\"gameStatus_handImageBlock__1VFVU\",\"infoBlock\":\"gameStatus_infoBlock__1rD56\",\"contentWrapper\":\"gameStatus_contentWrapper__30R0X\",\"totalScore\":\"gameStatus_totalScore__GUtuo\",\"startButton\":\"gameStatus_startButton__1pkOB\"};"],"sourceRoot":""}